; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node",
"class": "Brad",
"language": "GDScript",
"path": "res://Maths/Brad.gd"
}, {
"base": "Node2D",
"class": "Line",
"language": "GDScript",
"path": "res://Shapes/Line.gd"
}, {
"base": "Node2D",
"class": "Rectangle",
"language": "GDScript",
"path": "res://Shapes/Rectangle.gd"
}, {
"base": "KinematicBody2D",
"class": "Ship",
"language": "GDScript",
"path": "res://Ship/Ship.gd"
}, {
"base": "Node2D",
"class": "Square",
"language": "GDScript",
"path": "res://Shapes/Square.gd"
} ]
_global_script_class_icons={
"Brad": "",
"Line": "",
"Rectangle": "",
"Ship": "",
"Square": ""
}

[application]

config/name="ReverseThrust"
run/main_scene="res://World/MainLevel.tscn"
config/icon="res://icon.png"

[autoload]

BradLut="*res://Maths/BradLut.gd"
Resolution="*res://Utils/Resolution.gd"

[debug]

gdscript/warnings/treat_warnings_as_errors=true
gdscript/completion/autocomplete_setters_and_getters=true
gdscript/warnings/unused_class_variable=true

[display]

window/size/width=1280
window/size/height=720
window/vsync/vsync_via_compositor=true

[editor_plugins]

enabled=PoolStringArray( "res://addons/gdfxr/plugin.cfg" )

[input]

Thrust={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":1,"pressure":0.0,"pressed":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":12,"pressure":0.0,"pressed":false,"script":null)
 ]
}
RotateLeft={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":14,"pressure":0.0,"pressed":false,"script":null)
 ]
}
RotateRight={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":15,"pressure":0.0,"pressed":false,"script":null)
 ]
}

[input_devices]

pointing/emulate_touch_from_mouse=true
pointing/emulate_mouse_from_touch=false

[layer_names]

2d_physics/layer_1="Player"
2d_physics/layer_2="ThrustParticle"
2d_physics/layer_3="WorldObject"
2d_physics/layer_4="Wall"
2d_physics/layer_5="CameraAscendDetect"
2d_physics/layer_6="KillFloor"

[physics]

common/enable_pause_aware_picking=true
2d/thread_model=2

[rendering]

quality/driver/driver_name="GLES2"
2d/options/use_nvidia_rect_flicker_workaround=true
quality/intended_usage/framebuffer_allocation=0
quality/intended_usage/framebuffer_allocation.mobile=1
2d/snapping/use_gpu_pixel_snap=true
threads/thread_model=2
vram_compression/import_etc=true
vram_compression/import_etc2=false
quality/filters/anisotropic_filter_level=1
quality/filters/use_nearest_mipmap_filter=true
environment/default_clear_color=Color( 0, 0, 0, 1 )
environment/default_environment="res://default_env.tres"
